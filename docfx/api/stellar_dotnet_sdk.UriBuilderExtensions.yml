### YamlMime:ManagedReference
items:
- uid: stellar_dotnet_sdk.UriBuilderExtensions
  commentId: T:stellar_dotnet_sdk.UriBuilderExtensions
  id: UriBuilderExtensions
  parent: stellar_dotnet_sdk
  children:
  - stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams(UriBuilder)
  - stellar_dotnet_sdk.UriBuilderExtensions.SetPath(UriBuilder,System.String)
  - stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam(UriBuilder,System.String,System.String)
  langs:
  - csharp
  - vb
  name: UriBuilderExtensions
  nameWithType: UriBuilderExtensions
  fullName: stellar_dotnet_sdk.UriBuilderExtensions
  type: Class
  source:
    remote:
      path: stellar-dotnet-sdk/UriBuilderExtensions.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: UriBuilderExtensions
    path: ../stellar-dotnet-sdk/UriBuilderExtensions.cs
    startLine: 7
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk
  syntax:
    content: 'public static class UriBuilderExtensions : object'
    content.vb: >-
      Public Module UriBuilderExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam(UriBuilder,System.String,System.String)
  commentId: M:stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam(UriBuilder,System.String,System.String)
  id: SetQueryParam(UriBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: stellar_dotnet_sdk.UriBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetQueryParam(UriBuilder, String, String)
  nameWithType: UriBuilderExtensions.SetQueryParam(UriBuilder, String, String)
  fullName: stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam(UriBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/UriBuilderExtensions.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: SetQueryParam
    path: ../stellar-dotnet-sdk/UriBuilderExtensions.cs
    startLine: 13
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk
  summary: "\nSets the specified query parameter key-value pair of the URI.\nIf the key already exists, the value is overwritten.\n"
  example: []
  syntax:
    content: public static UriBuilder SetQueryParam(this UriBuilder uri, string key, string value)
    parameters:
    - id: uri
      type: UriBuilder
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: UriBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetQueryParam(uri As UriBuilder, key As String, value As String) As UriBuilder
  overload: stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: stellar_dotnet_sdk.UriBuilderExtensions.SetPath(UriBuilder,System.String)
  commentId: M:stellar_dotnet_sdk.UriBuilderExtensions.SetPath(UriBuilder,System.String)
  id: SetPath(UriBuilder,System.String)
  isExtensionMethod: true
  parent: stellar_dotnet_sdk.UriBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetPath(UriBuilder, String)
  nameWithType: UriBuilderExtensions.SetPath(UriBuilder, String)
  fullName: stellar_dotnet_sdk.UriBuilderExtensions.SetPath(UriBuilder, System.String)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/UriBuilderExtensions.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: SetPath
    path: ../stellar-dotnet-sdk/UriBuilderExtensions.cs
    startLine: 32
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk
  syntax:
    content: public static UriBuilder SetPath(this UriBuilder uri, string path)
    parameters:
    - id: uri
      type: UriBuilder
    - id: path
      type: System.String
    return:
      type: UriBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPath(uri As UriBuilder, path As String) As UriBuilder
  overload: stellar_dotnet_sdk.UriBuilderExtensions.SetPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams(UriBuilder)
  commentId: M:stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams(UriBuilder)
  id: GetQueryParams(UriBuilder)
  isExtensionMethod: true
  parent: stellar_dotnet_sdk.UriBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetQueryParams(UriBuilder)
  nameWithType: UriBuilderExtensions.GetQueryParams(UriBuilder)
  fullName: stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams(UriBuilder)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/UriBuilderExtensions.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: GetQueryParams
    path: ../stellar-dotnet-sdk/UriBuilderExtensions.cs
    startLine: 43
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk
  summary: "\nGets the query string key-value pairs of the URI.\nNote that the one of the keys may be null (&quot;?123&quot;) and\nthat one of the keys may be an empty string (&quot;?=123&quot;).\n"
  example: []
  syntax:
    content: public static IEnumerable<KeyValuePair<string, string>> GetQueryParams(this UriBuilder uri)
    parameters:
    - id: uri
      type: UriBuilder
    return:
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetQueryParams(uri As UriBuilder) As IEnumerable(Of KeyValuePair(Of String, String))
  overload: stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: stellar_dotnet_sdk
  commentId: N:stellar_dotnet_sdk
  name: stellar_dotnet_sdk
  nameWithType: stellar_dotnet_sdk
  fullName: stellar_dotnet_sdk
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam*
  commentId: Overload:stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam
  name: SetQueryParam
  nameWithType: UriBuilderExtensions.SetQueryParam
  fullName: stellar_dotnet_sdk.UriBuilderExtensions.SetQueryParam
- uid: UriBuilder
  isExternal: true
  name: UriBuilder
  nameWithType: UriBuilder
  fullName: UriBuilder
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: stellar_dotnet_sdk.UriBuilderExtensions.SetPath*
  commentId: Overload:stellar_dotnet_sdk.UriBuilderExtensions.SetPath
  name: SetPath
  nameWithType: UriBuilderExtensions.SetPath
  fullName: stellar_dotnet_sdk.UriBuilderExtensions.SetPath
- uid: stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams*
  commentId: Overload:stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams
  name: GetQueryParams
  nameWithType: UriBuilderExtensions.GetQueryParams
  fullName: stellar_dotnet_sdk.UriBuilderExtensions.GetQueryParams
- uid: IEnumerable{KeyValuePair{System.String,System.String}}
  commentId: '!:IEnumerable{KeyValuePair{System.String,System.String}}'
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: IEnumerable<KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: IEnumerable(Of KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
