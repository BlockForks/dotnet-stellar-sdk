### YamlMime:ManagedReference
items:
- uid: stellar_dotnet_sdk.responses.Link`1
  commentId: T:stellar_dotnet_sdk.responses.Link`1
  id: Link`1
  parent: stellar_dotnet_sdk.responses
  children:
  - stellar_dotnet_sdk.responses.Link`1.#ctor(System.String)
  - stellar_dotnet_sdk.responses.Link`1.Create(System.String,System.Boolean)
  - stellar_dotnet_sdk.responses.Link`1.Follow
  - stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient)
  - stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient,IDictionary{System.String,System.Object})
  - stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient,System.Object)
  - stellar_dotnet_sdk.responses.Link`1.Follow(IDictionary{System.String,System.Object})
  - stellar_dotnet_sdk.responses.Link`1.Follow(System.Object)
  - stellar_dotnet_sdk.responses.Link`1.Resolve
  - stellar_dotnet_sdk.responses.Link`1.Resolve(IDictionary{System.String,System.Object})
  - stellar_dotnet_sdk.responses.Link`1.Resolve(System.Object)
  langs:
  - csharp
  - vb
  name: Link<TResponse>
  nameWithType: Link<TResponse>
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>
  type: Class
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Link
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 25
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  syntax:
    content: 'public class Link<TResponse> : Link where TResponse : Response'
    typeParameters:
    - id: TResponse
    content.vb: >-
      Public Class Link(Of TResponse As Response)
          Inherits Link
  inheritance:
  - System.Object
  - stellar_dotnet_sdk.responses.Link
  derivedClasses:
  - stellar_dotnet_sdk.responses.TemplatedLink`1
  inheritedMembers:
  - stellar_dotnet_sdk.responses.Link.Href
  - stellar_dotnet_sdk.responses.Link.Uri
  - stellar_dotnet_sdk.responses.Link.Templated
  nameWithType.vb: Link(Of TResponse)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse)
  name.vb: Link(Of TResponse)
- uid: stellar_dotnet_sdk.responses.Link`1.Create(System.String,System.Boolean)
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Create(System.String,System.Boolean)
  id: Create(System.String,System.Boolean)
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Create(String, Boolean)
  nameWithType: Link<TResponse>.Create(String, Boolean)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Create(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Create
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 29
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  syntax:
    content: public static Link<TResponse> Create(string href, bool templated)
    parameters:
    - id: href
      type: System.String
    - id: templated
      type: System.Boolean
    return:
      type: stellar_dotnet_sdk.responses.Link`1
    content.vb: Public Shared Function Create(href As String, templated As Boolean) As Link(Of TResponse)
  overload: stellar_dotnet_sdk.responses.Link`1.Create*
  nameWithType.vb: Link(Of TResponse).Create(String, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Create(System.String, System.Boolean)
- uid: stellar_dotnet_sdk.responses.Link`1.#ctor(System.String)
  commentId: M:stellar_dotnet_sdk.responses.Link`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Link(String)
  nameWithType: Link<TResponse>.Link(String)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Link(System.String)
  type: Constructor
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: .ctor
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 38
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  syntax:
    content: public Link(string href)
    parameters:
    - id: href
      type: System.String
    content.vb: Public Sub New(href As String)
  overload: stellar_dotnet_sdk.responses.Link`1.#ctor*
  nameWithType.vb: Link(Of TResponse).Link(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Link(System.String)
- uid: stellar_dotnet_sdk.responses.Link`1.Resolve
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Resolve
  id: Resolve
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Resolve()
  nameWithType: Link<TResponse>.Resolve()
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Resolve()
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Resolve
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 46
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  summary: "\nResolve template Uri by performing variables substitution.\n"
  example: []
  syntax:
    content: public virtual Uri Resolve()
    return:
      type: Uri
      description: ''
    content.vb: Public Overridable Function Resolve As Uri
  overload: stellar_dotnet_sdk.responses.Link`1.Resolve*
  nameWithType.vb: Link(Of TResponse).Resolve()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Resolve()
- uid: stellar_dotnet_sdk.responses.Link`1.Resolve(System.Object)
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Resolve(System.Object)
  id: Resolve(System.Object)
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Resolve(Object)
  nameWithType: Link<TResponse>.Resolve(Object)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Resolve(System.Object)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Resolve
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 48
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  syntax:
    content: public virtual Uri Resolve(object parameters)
    parameters:
    - id: parameters
      type: System.Object
    return:
      type: Uri
    content.vb: Public Overridable Function Resolve(parameters As Object) As Uri
  overload: stellar_dotnet_sdk.responses.Link`1.Resolve*
  nameWithType.vb: Link(Of TResponse).Resolve(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Resolve(System.Object)
- uid: stellar_dotnet_sdk.responses.Link`1.Resolve(IDictionary{System.String,System.Object})
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Resolve(IDictionary{System.String,System.Object})
  id: Resolve(IDictionary{System.String,System.Object})
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Resolve(IDictionary<String, Object>)
  nameWithType: Link<TResponse>.Resolve(IDictionary<String, Object>)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Resolve(IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Resolve
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 50
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  syntax:
    content: public virtual Uri Resolve(IDictionary<string, object> parameters)
    parameters:
    - id: parameters
      type: IDictionary{System.String,System.Object}
    return:
      type: Uri
    content.vb: Public Overridable Function Resolve(parameters As IDictionary(Of String, Object)) As Uri
  overload: stellar_dotnet_sdk.responses.Link`1.Resolve*
  nameWithType.vb: Link(Of TResponse).Resolve(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Resolve(IDictionary(Of System.String, System.Object))
  name.vb: Resolve(IDictionary(Of String, Object))
- uid: stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient,System.Object)
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient,System.Object)
  id: Follow(HttpClient,System.Object)
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Follow(HttpClient, Object)
  nameWithType: Link<TResponse>.Follow(HttpClient, Object)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Follow(HttpClient, System.Object)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Follow
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 52
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  syntax:
    content: public Task<TResponse> Follow(HttpClient httpClient, object parameters)
    parameters:
    - id: httpClient
      type: HttpClient
    - id: parameters
      type: System.Object
    return:
      type: Task{{TResponse}}
    content.vb: Public Function Follow(httpClient As HttpClient, parameters As Object) As Task(Of TResponse)
  overload: stellar_dotnet_sdk.responses.Link`1.Follow*
  nameWithType.vb: Link(Of TResponse).Follow(HttpClient, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Follow(HttpClient, System.Object)
- uid: stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient,IDictionary{System.String,System.Object})
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient,IDictionary{System.String,System.Object})
  id: Follow(HttpClient,IDictionary{System.String,System.Object})
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Follow(HttpClient, IDictionary<String, Object>)
  nameWithType: Link<TResponse>.Follow(HttpClient, IDictionary<String, Object>)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Follow(HttpClient, IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Follow
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 63
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  summary: "\nFollow the Link, retrieving the linked resource.\n"
  example: []
  syntax:
    content: public Task<TResponse> Follow(HttpClient httpClient, IDictionary<string, object> parameters)
    parameters:
    - id: httpClient
      type: HttpClient
      description: ''
    - id: parameters
      type: IDictionary{System.String,System.Object}
      description: ''
    return:
      type: Task{{TResponse}}
      description: ''
    content.vb: Public Function Follow(httpClient As HttpClient, parameters As IDictionary(Of String, Object)) As Task(Of TResponse)
  overload: stellar_dotnet_sdk.responses.Link`1.Follow*
  nameWithType.vb: Link(Of TResponse).Follow(HttpClient, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Follow(HttpClient, IDictionary(Of System.String, System.Object))
  name.vb: Follow(HttpClient, IDictionary(Of String, Object))
- uid: stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient)
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Follow(HttpClient)
  id: Follow(HttpClient)
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Follow(HttpClient)
  nameWithType: Link<TResponse>.Follow(HttpClient)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Follow(HttpClient)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Follow
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 73
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  summary: "\nFollow the Link, retrieving the linked resource.\n"
  example: []
  syntax:
    content: public Task<TResponse> Follow(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: HttpClient
      description: ''
    return:
      type: Task{{TResponse}}
      description: ''
    content.vb: Public Function Follow(httpClient As HttpClient) As Task(Of TResponse)
  overload: stellar_dotnet_sdk.responses.Link`1.Follow*
  nameWithType.vb: Link(Of TResponse).Follow(HttpClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Follow(HttpClient)
- uid: stellar_dotnet_sdk.responses.Link`1.Follow
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Follow
  id: Follow
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Follow()
  nameWithType: Link<TResponse>.Follow()
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Follow()
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Follow
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 82
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  summary: "\nFollow the Link, retrieving the linked resource.\n"
  example: []
  syntax:
    content: public Task<TResponse> Follow()
    return:
      type: Task{{TResponse}}
      description: ''
    content.vb: Public Function Follow As Task(Of TResponse)
  overload: stellar_dotnet_sdk.responses.Link`1.Follow*
  nameWithType.vb: Link(Of TResponse).Follow()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Follow()
- uid: stellar_dotnet_sdk.responses.Link`1.Follow(System.Object)
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Follow(System.Object)
  id: Follow(System.Object)
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Follow(Object)
  nameWithType: Link<TResponse>.Follow(Object)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Follow(System.Object)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Follow
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 92
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  summary: "\nFollow the Link, retrieving the linked resource.\n"
  example: []
  syntax:
    content: public Task<TResponse> Follow(object parameters)
    parameters:
    - id: parameters
      type: System.Object
      description: ''
    return:
      type: Task{{TResponse}}
      description: ''
    content.vb: Public Function Follow(parameters As Object) As Task(Of TResponse)
  overload: stellar_dotnet_sdk.responses.Link`1.Follow*
  nameWithType.vb: Link(Of TResponse).Follow(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Follow(System.Object)
- uid: stellar_dotnet_sdk.responses.Link`1.Follow(IDictionary{System.String,System.Object})
  commentId: M:stellar_dotnet_sdk.responses.Link`1.Follow(IDictionary{System.String,System.Object})
  id: Follow(IDictionary{System.String,System.Object})
  parent: stellar_dotnet_sdk.responses.Link`1
  langs:
  - csharp
  - vb
  name: Follow(IDictionary<String, Object>)
  nameWithType: Link<TResponse>.Follow(IDictionary<String, Object>)
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Follow(IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: stellar-dotnet-sdk/responses/Link.cs
      branch: master
      repo: https://github.com/elucidsoft/dotnet-stellar-sdk.git
    id: Follow
    path: ../stellar-dotnet-sdk/responses/Link.cs
    startLine: 102
  assemblies:
  - stellar-dotnet-sdk
  namespace: stellar_dotnet_sdk.responses
  summary: "\nFollow the Link, retrieving the linked resource.\n"
  example: []
  syntax:
    content: public Task<TResponse> Follow(IDictionary<string, object> parameters)
    parameters:
    - id: parameters
      type: IDictionary{System.String,System.Object}
      description: ''
    return:
      type: Task{{TResponse}}
      description: ''
    content.vb: Public Function Follow(parameters As IDictionary(Of String, Object)) As Task(Of TResponse)
  overload: stellar_dotnet_sdk.responses.Link`1.Follow*
  nameWithType.vb: Link(Of TResponse).Follow(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Follow(IDictionary(Of System.String, System.Object))
  name.vb: Follow(IDictionary(Of String, Object))
references:
- uid: stellar_dotnet_sdk.responses
  commentId: N:stellar_dotnet_sdk.responses
  name: stellar_dotnet_sdk.responses
  nameWithType: stellar_dotnet_sdk.responses
  fullName: stellar_dotnet_sdk.responses
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: stellar_dotnet_sdk.responses.Link
  commentId: T:stellar_dotnet_sdk.responses.Link
  parent: stellar_dotnet_sdk.responses
  name: Link
  nameWithType: Link
  fullName: stellar_dotnet_sdk.responses.Link
- uid: stellar_dotnet_sdk.responses.Link.Href
  commentId: P:stellar_dotnet_sdk.responses.Link.Href
  parent: stellar_dotnet_sdk.responses.Link
  name: Href
  nameWithType: Link.Href
  fullName: stellar_dotnet_sdk.responses.Link.Href
- uid: stellar_dotnet_sdk.responses.Link.Uri
  commentId: P:stellar_dotnet_sdk.responses.Link.Uri
  parent: stellar_dotnet_sdk.responses.Link
  name: Uri
  nameWithType: Link.Uri
  fullName: stellar_dotnet_sdk.responses.Link.Uri
- uid: stellar_dotnet_sdk.responses.Link.Templated
  commentId: P:stellar_dotnet_sdk.responses.Link.Templated
  parent: stellar_dotnet_sdk.responses.Link
  name: Templated
  nameWithType: Link.Templated
  fullName: stellar_dotnet_sdk.responses.Link.Templated
- uid: stellar_dotnet_sdk.responses.Link`1.Create*
  commentId: Overload:stellar_dotnet_sdk.responses.Link`1.Create
  name: Create
  nameWithType: Link<TResponse>.Create
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Create
  nameWithType.vb: Link(Of TResponse).Create
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Create
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: stellar_dotnet_sdk.responses.Link`1
  commentId: T:stellar_dotnet_sdk.responses.Link`1
  parent: stellar_dotnet_sdk.responses
  name: Link<TResponse>
  nameWithType: Link<TResponse>
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>
  nameWithType.vb: Link(Of TResponse)
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse)
  name.vb: Link(Of TResponse)
  spec.csharp:
  - uid: stellar_dotnet_sdk.responses.Link`1
    name: Link
    nameWithType: Link
    fullName: stellar_dotnet_sdk.responses.Link
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: stellar_dotnet_sdk.responses.Link`1
    name: Link
    nameWithType: Link
    fullName: stellar_dotnet_sdk.responses.Link
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: stellar_dotnet_sdk.responses.Link`1.#ctor*
  commentId: Overload:stellar_dotnet_sdk.responses.Link`1.#ctor
  name: Link
  nameWithType: Link<TResponse>.Link
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Link
  nameWithType.vb: Link(Of TResponse).Link
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Link
- uid: stellar_dotnet_sdk.responses.Link`1.Resolve*
  commentId: Overload:stellar_dotnet_sdk.responses.Link`1.Resolve
  name: Resolve
  nameWithType: Link<TResponse>.Resolve
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Resolve
  nameWithType.vb: Link(Of TResponse).Resolve
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Resolve
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: IDictionary{System.String,System.Object}
  commentId: '!:IDictionary{System.String,System.Object}'
  definition: IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: stellar_dotnet_sdk.responses.Link`1.Follow*
  commentId: Overload:stellar_dotnet_sdk.responses.Link`1.Follow
  name: Follow
  nameWithType: Link<TResponse>.Follow
  fullName: stellar_dotnet_sdk.responses.Link<TResponse>.Follow
  nameWithType.vb: Link(Of TResponse).Follow
  fullName.vb: stellar_dotnet_sdk.responses.Link(Of TResponse).Follow
- uid: HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: HttpClient
- uid: Task{{TResponse}}
  commentId: '!:Task{`0}'
  definition: Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
